name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: pyinstaller app.spec

      - name: Rename output on Windows
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p release
          mv dist/app.exe release/ScoreboardPreviewer.exe

      - name: Rename output on Unix-like systems
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p release
          mv dist/app release/ScoreboardPreviewer

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ScoreboardPreviewer-${{ matrix.os }}
          path: release/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Prepare release assets
        run: |
          mkdir release-assets
          for artifact in artifacts/*; do
            name=$(basename "$artifact")
            if [ -f "$artifact/ScoreboardPreviewer.exe" ]; then
              zip -j "release-assets/${name}.zip" "$artifact/ScoreboardPreviewer.exe"
            elif [ -f "$artifact/ScoreboardPreviewer" ]; then
              tar -czf "release-assets/${name}.tar.gz" -C "$artifact" ScoreboardPreviewer
            fi
          done

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
